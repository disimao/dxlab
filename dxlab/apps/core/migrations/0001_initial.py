# Generated by Django 3.0.7 on 2020-06-20 22:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import dxlab.apps.core.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('first_name', models.CharField(blank=True, max_length=40, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=40, verbose_name='Last name')),
                ('is_staff', models.BooleanField(default=True, verbose_name='Active')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail Address')),
                ('mobile_phone_number', models.IntegerField(blank=True, null=True, verbose_name='Mobile phone number')),
                ('contact_phone_number', models.IntegerField(verbose_name='Contact phone number')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-id'],
                'unique_together': {('email',)},
            },
            managers=[
                ('objects', dxlab.apps.core.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Street name')),
                ('number', models.IntegerField(blank=True, null=True, verbose_name='Number')),
                ('additional_information', models.CharField(max_length=255, verbose_name='State')),
                ('postal_code', models.IntegerField(verbose_name='Postal code')),
                ('state', models.CharField(max_length=255, verbose_name='State')),
                ('country', models.CharField(max_length=255, verbose_name='Country')),
            ],
            options={
                'ordering': ['-id'],
                'unique_together': {('street_name', 'number', 'additional_information', 'postal_code', 'state', 'country')},
            },
        ),
        migrations.CreateModel(
            name='BillingInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Business name')),
                ('identification_number', models.IntegerField(verbose_name='Identification Number')),
                ('billing_address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Address', verbose_name='Billing Address')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_information', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.BillingInformation', verbose_name='Billing Address')),
                ('shipping_address', models.ManyToManyField(to='core.Address', verbose_name="Billing Address'")),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Customer', verbose_name='Customer')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='core.Store')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('quantity', models.IntegerField(verbose_name='Quantity')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Order', verbose_name='Order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Product', verbose_name='Product')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='order',
            name='items',
            field=models.ManyToManyField(blank=True, through='core.OrderItem', to='core.Product', verbose_name='Items'),
        ),
    ]
